spring.application.name=TeamProject3

# Web page Setting :  Board -> /
server.servlet.context-path=/

# server 의 port 번호
server.port = 9090

# jsp 가 저장될 폴더이름  "/src/main/webapp/WEB-INF/views/" + "home" + ".jsp"
spring.mvc.view.prefix = /WEB-INF/views/
spring.mvc.view.suffix = .jsp

# JSP 수정시 서버 재시작없이 바로 적용할 수 있게 설정
server.servlet.jsp.init-parameters.development = true

# mybatis null 허용해서 객체만들어주기
mybatis.configuration.call-setters-on-nulls=true

# mapper.xml 경로 설정
mybatis.mapper-locations:classpath:mapper/**/*Mapper.xml

# datasource 설정
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

spring.datasource.url=jdbc:oracle:thin:@192.168.0.4:1521:xe
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe

spring.datasource.username=teamproject3
spring.datasource.password=1234

spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true
spring.freemarker.cache=false
spring.thymeleaf.cache=false

#registration -- 외부 서비스에서 우리 서비스를 특정하기 위해 등록하는 정보
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.client-id=Zfzbwlgd9Hu09e_WLIzW
spring.security.oauth2.client.registration.naver.client-secret=KhtEyqFvT8
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:9090/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email

#provider -- 서비스별로 정해진 값이 존재함. (구글,페이스북,깃허브 등은 명시 안 해도 됨.)
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

#registration
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=637607227198-tae6k5pckf7h6ande9djue3mjvj77j7g.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:9090/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email

# 기본 name/password
#spring.security.user.name=user
#spring.security.user.password=1234

# 디버그
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG


## 파일업로드를 위해 추가된 부분
# file upload setting - no need library
spring.servlet.multipart.enabled=true
# 파일 저장 경로
spring.servlet.multipart.location=C:/dev/tools/TeamProject3/src/main/resources/static/img/commonImage/

# 업로드 될 파일당 최대 크기
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=1000MB
# properties 변수 

part4.upload-path=C:/dev/tools/TeamProject3/src/main/resources/static/images/product